https://www.keycloak.org/docs/latest/server_installation/index.html
https://zaclittleberry.github.io/posts/installing-keycloak-with-digital-ocean-managed-postgres/
https://github.com/keycloak/keycloak
https://github.com/GazeDev/gaze_auth
https://hub.docker.com/r/jboss/keycloak/

These are the steps to get the local keycloak server running in docker on CentOS 7
----------------------------------------------------------------------------------------
1) Create a CentOS 7.6 x64 fresh install
2) ssh root@138.68.14.235
3) yum check-update
4) yum clean all
5) yum update
6) reboot
7) ssh root@138.68.14.235
8) yum install git
9) Setup the keycloak user
    ssh root@138.68.14.235
    adduser --system --user-group --create-home --groups adm,wheel,systemd-journal keycloak
    mkdir /home/keycloak/.ssh
    chmod 0700 /home/keycloak/.ssh/
    cp -Rfv /root/.ssh /home/keycloak/
    chown -Rfv keycloak:keycloak /home/keycloak/.ssh
    chown -R keycloak:keycloak /home/keycloak/
    passwd keycloak
    exit
    ssh keycloak@138.68.14.235
    sudo groupadd docker
    sudo gpasswd -a $USER docker
    exit
10) ssh keycloak@138.68.14.235
11) sudo yum install docker
11) Install docker-compose on CentOS 7 -- https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-compose-on-centos-7
    Change version 1.24.1 to the most recent version of docker-compose
    sudo curl -L "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    docker-compose --version
12) git clone https://github.com/nsivraj/keycloak-vcx.git
13) cd keycloak-vcx/keycloak-docker
14) cp variables-local.env.example variables-local.env
15) Edit variables-local.env to match your environment
16) sudo service docker start (or sudo service docker restart)
17) CURRENT_UID=$(id -u root):$(id -g root) docker-compose --verbose --file=docker-compose-keycloak.yml up
-----------------------------------------------------------------------------------------------------------
Steps below MUST be re-run everytime you re-build your docker containers
-----------------------------------------------------------------------------------------------------------
18) CURRENT_UID=$(id -u root):$(id -g root) docker-compose --verbose --file=docker-compose-keycloak.yml exec keycloak keycloak/bin/add-user-keycloak.sh -u admin -p 'password'
19) NOTE: this restart causes docker-compose to hang sometimes, then you have to force kill the docker-compose processes:
    CURRENT_UID=$(id -u root):$(id -g root) docker-compose --verbose --file=docker-compose-keycloak.yml restart
20) CURRENT_UID=$(id -u root):$(id -g root) docker-compose --verbose --file=docker-compose-keycloak.yml exec keycloak keycloak/bin/kcadm.sh config credentials --server http://localhost:8080/auth --realm master --user admin
21) CURRENT_UID=$(id -u root):$(id -g root) docker-compose --verbose --file=docker-compose-keycloak.yml exec keycloak keycloak/bin/kcadm.sh get clients
    OR
    docker exec -it keycloak-local /bin/bash
    cd /opt/jboss/keycloak/bin
    ./kcadm.sh get clients
22) Change the admin password by logging in as the admin user and changing the password
    https://138.68.14.235:9443/
23) Now follow the steps below to add a user for the wildfly http management console
    https://138.68.14.235:9993/
    docker exec -it keycloak-local /bin/bash
    cd /opt/jboss/keycloak/bin
    ./add-user.sh
    What type of user do you wish to add?
    a) Management User (mgmt-users.properties)
    b) Application User (application-users.properties)
    (a): a
    Enter the details of the new user to add.
    Using realm 'ManagementRealm' as discovered from the existing property files.
    Username : mgmtadmin
    Password recommendations are listed below. To modify these restrictions edit the add-user.properties configuration file.
    - The password should be different from the username
    - The password should not be one of the following restricted values {root, admin, administrator}
    - The password should contain at least 8 characters, 1 alphabetic character(s), 1 digit(s), 1 non-alphanumeric symbol(s)
    Password :
    WFLYDM0101: Password should have at least 1 digit.
    Are you sure you want to use the password entered yes/no? yes
    Re-enter Password :
    What groups do you want this user to belong to? (Please enter a comma separated list, or leave blank for none)[  ]:
    About to add user 'mgmtadmin' for realm 'ManagementRealm'
    Is this correct yes/no? yes
    Added user 'mgmtadmin' to file '/opt/jboss/keycloak/standalone/configuration/mgmt-users.properties'
    Added user 'mgmtadmin' to file '/opt/jboss/keycloak/domain/configuration/mgmt-users.properties'
    Added user 'mgmtadmin' with groups  to file '/opt/jboss/keycloak/standalone/configuration/mgmt-groups.properties'
    Added user 'mgmtadmin' with groups  to file '/opt/jboss/keycloak/domain/configuration/mgmt-groups.properties'
    Is this new user going to be used for one AS process to connect to another AS process?
    e.g. for a slave host controller connecting to the master or for a Remoting connection for server to server EJB calls.
    yes/no? no
24) Now login to the wildfly http management console with the admin user https://138.68.14.235:9993/








##############################################################################################
## How to gracefully exit docker-compose up when you forget the -d option
##############################################################################################
## $ dc up         # oops, forgot the -d, can't detach gracefully
## Ctrl+Z          # stop and send dc up to the background
## $ kill -9 %1    # send SIGKILL **only** to this dc up
##############################################################################################
## ps ax|grep -i docker-compose
## kill -9 [pids-of-docker-compose]
## docker rm $(docker ps -qa --no-trunc --filter "status=exited")
## docker ps --all
## docker images --all
## docker cp 217da64120d9:/opt/jboss/keycloak/standalone/configuration.tar .
## docker stop [CONTAINER_ID | CONTAINER_NAME]
## docker network create keycloak-network
## docker run -d --name postgres --net keycloak-network -e POSTGRES_DB=keycloak -e POSTGRES_USER=keycloak -e POSTGRES_PASSWORD=password postgres
## docker run --name keycloak --net keycloak-network jboss/keycloak -e DB_USER=keycloak -e DB_PASSWORD=password
## docker rmi $(docker images --filter "dangling=true" -q --no-trunc)
## docker rmi $(docker images --format '{{.Repository}}:{{.Tag}}' |grep 'keycloak')
## docker rmi $(docker images --format '{{.Repository}}:{{.Tag}}' |grep 'postgres')





https://138.68.14.235:9443/auth/admin/{realm-name}/console
https://138.68.14.235:9443/auth/admin/master/console
https://138.68.14.235:9443/auth/admin/
https://138.68.14.235:9443/auth/




see if keycloak has permission to the mounted file systems
docker exec -it keycloak-local /bin/bash
ls -al /opt/jboss/keycloak/themes/vcx
ls -al /opt/jboss/keycloak/themes/housingdb

see if postgres has permission to the mounted file systems
docker exec -it postgres-local /bin/bash
ls -al /var/lib/postgresql/data


Probably not needed
-------------------------------------------------------------------
22) Capture the "id" from the output of step 21) above for the "security-admin-console"
    "id" : "e8d850d9-b043-452d-9639-3abf5f17d995",
    "clientId" : "security-admin-console",
    CURRENT_UID=$(id -u root):$(id -g root) docker-compose --verbose --file=docker-compose-keycloak.yml exec keycloak keycloak/bin/kcadm.sh update clients/e8d850d9-b043-452d-9639-3abf5f17d995 -r master -s 'redirectUris=["https://accounts.gaze.dev/auth/*"]'


